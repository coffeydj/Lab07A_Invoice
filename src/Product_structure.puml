@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "Product",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1252976967 { 
   	label=LineItem
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   LineItem1252976967[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LineItem</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   calculatedTotal: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   quantity: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1355179215 { 
   	label=Product
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Product1355179215[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Product</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   productName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   unitPrice: double [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_801063328 { 
   	label=InvoiceFrame
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   InvoiceFrame801063328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InvoiceFrame</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   addBtn: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   addressPnl: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   btnPnl: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   cityLbl: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   cityTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   clearBtn: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   customerNameLbl: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   customerNameTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   entryPnl: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   invoiceFont: Font [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   invoicePnl: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   invoiceTA: JTextArea [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   lineItems: ArrayList&lt;LineItem&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   mainPnl: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   productInfoPnl: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   productNameLbl: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   productNameTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   quantityLbl: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   quantityTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   quitBtn: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   scroller: JScrollPane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   stateLbl: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   stateTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   streetAddressLbl: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   streetAddressTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   submitBtn: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   unitPriceLbl: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   unitPriceTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   zipCodeLbl: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   zipCodeTF: JTextField [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- addItem(productName: String, unitPrice: String, quantity: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- clear()</TD></TR>
<TR><TD ALIGN="LEFT" >- createBtnPnl()</TD></TR>
<TR><TD ALIGN="LEFT" >- createEntryPnl()</TD></TR>
<TR><TD ALIGN="LEFT" >- createInvoicePnl()</TD></TR>
<TR><TD ALIGN="LEFT" >- submit()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
InvoiceFrame801063328 -> LineItem1252976967[label="lineItems
[0..*]"];
Product1355179215 -> LineItem1252976967[arrowhead=none, arrowtail=empty, dir=both];
    
}
@enduml